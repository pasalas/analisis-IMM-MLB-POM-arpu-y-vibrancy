-- https://github.com/pasalas/analisis-IMM-MLB-POM-arpu-y-vibrancy

DECLARE MES_DESDE DATE DEFAULT '2023-03-01'
;
DECLARE MES_HASTA DATE DEFAULT '2023-04-01'
;

WITH EVOLUCION_ACTIVE_CUSTOMER AS
-- por fila trae el status de altas_netas. Por mes - cus_cust_id
(
SELECT 
  DATE_TRUNC(A.fecha, MONTH) AS year_month
, CAST(A.cus_cust_id AS STRING) AS cus_cust_id
, A.altas_netas

    -- , A.sit_site_id
    -- , A.vertical
    -- , B.CUENTA_PRINCIPAL
    -- , A.Segmentacion_NSM
    -- , B.estado
    -- , A.PACKAGE_DESC
    -- , PCK_PROMOTION_PACK_ID
    -- , PACKAGE_CONTENT
    -- , PACKAGE_DURATION
    -- , PACKAGE_PRICE
    -- , PACKAGE_DURATION
    -- , ENGAGEMENT_TYPE
    -- , TEST_USER
    -- , DEBITO_AUTOMATICO
    -- , METODO_DA
    -- , EJECUTIVO_CIERR
    -- , ARPU_LAST_MONTH
    -- , ARPU_LAST_ACTUAL

FROM `meli-bi-data.SBOX_CLASSI_PLANNING.BT_BASE_INSTALADA` AS A

LEFT JOIN `meli-bi-data.SBOX_CLASSI_PLANNING.LK_DATOS_USERS_SF` AS B
ON A.cus_cust_id = CAST(B.cus_cust_id AS STRING)
AND A.sit_site_id = B.SIT_SITE_ID

WHERE DATE_TRUNC(A.fecha, MONTH) BETWEEN MES_DESDE AND MES_HASTA
--and altas_netas like ('%user%') 
and A.sit_site_id in ('MLB')
and Vertical in ('MO')
and PACKAGE_CONTENT in ('publications')
and TEST_USER in ('NA')
and altas_netas IN ('Baja No ADMIN','BI','Baja ADMIN','Alta','Reactivación') -- ('Baja No ADMIN','Paycheck_user','Renovación','BI','Baja ADMIN','Alta','Reactivación')
and PACKAGE_DESC NOT IN ('Todo o seu estoque Free')

QUALIFY ROW_NUMBER() OVER (PARTITION BY DATE_TRUNC(A.fecha, MONTH),A.cus_cust_id ORDER BY A.fecha DESC) = 1
) 

-- NUEVO
, EVOLUCION_REESTRUCTURACION AS
(

SELECT 
  B.parent_account_name
, B.parent_account_id
, CAST(A.year_month AS DATE) AS year_month

, SUM(CAST(A.revenue_destaque AS NUMERIC)) AS parent_id_revenue_destaque
, SUM(CAST(A.revenue_especial AS NUMERIC)) AS parent_id_revenue_especial
, SUM(CAST(A.revenue_publicacion AS NUMERIC)) AS parent_id_revenue_publicacion
, SUM(CAST(A.revenue_showroom AS NUMERIC)) AS parent_id_revenue_showroom
, SUM(CAST(A.arpu_total AS NUMERIC)) AS parent_id_arpu_total
, SUM((COALESCE(CAST(A.revenue_destaque AS NUMERIC),0)+COALESCE(CAST(A.revenue_publicacion AS NUMERIC),0)+COALESCE(CAST(A.revenue_showroom AS NUMERIC),0))) AS parent_id_arpu_performance


FROM `meli-bi-data.SBOX_DESARROLLOMKTVIS.IMM_MLB_EVOLUCION_CARGOS_gsheet` AS A

INNER JOIN `meli-bi-data.SBOX_DESARROLLOMKTVIS.LK_IMM_MLB_PARENT_ACCOUNT_gsheet` AS B
ON A.is_parent_id = 'si'
AND B.cus_cust_id IS NOT NULL
AND CAST(A.cus_cust_id AS STRING) = CAST(B.cus_cust_id AS STRING)

WHERE CAST(A.year_month AS DATE) BETWEEN MES_DESDE AND MES_HASTA

GROUP BY 1,2,3

)

, EVOLUCION_CARGOS AS 
-- por fila trae los cus_cust_id NO asociados a una parent_id, y el revenue de cada cus_cus_id. Desgloce: mes - cus_cust_id
(
SELECT 
  B.parent_account_name
, B.parent_account_id
, CAST(A.year_month AS DATE) AS year_month
, CAST(A.cus_cust_id AS STRING) AS cus_cust_id
, CAST(A.revenue_destaque AS NUMERIC) AS cust_id_revenue_destaque
, CAST(A.revenue_especial AS NUMERIC) AS cust_id_revenue_especial
, CAST(A.revenue_publicacion AS NUMERIC) AS cust_id_revenue_publicacion
, CAST(A.revenue_showroom AS NUMERIC) AS cust_id_revenue_showroom
, CAST(A.arpu_total AS NUMERIC) AS cust_id_arpu_total
, (COALESCE(CAST(A.revenue_destaque AS NUMERIC),0)+COALESCE(CAST(A.revenue_publicacion AS NUMERIC),0)+COALESCE(CAST(A.revenue_showroom AS NUMERIC),0)) AS cust_id_arpu_performance

-- NUEVO
, C.parent_id_revenue_destaque
, C.parent_id_revenue_especial
, C.parent_id_revenue_publicacion
, C.parent_id_revenue_showroom
, C.parent_id_arpu_total
, C.parent_id_arpu_performance


FROM `meli-bi-data.SBOX_DESARROLLOMKTVIS.IMM_MLB_EVOLUCION_CARGOS_gsheet` AS A
--150425

LEFT JOIN `meli-bi-data.SBOX_DESARROLLOMKTVIS.LK_IMM_MLB_PARENT_ACCOUNT_gsheet` AS B
ON A.is_parent_id = 'si'
AND B.cus_cust_id IS NOT NULL
AND CAST(A.cus_cust_id AS STRING) = CAST(B.cus_cust_id AS STRING)

-- NUEVO
LEFT JOIN EVOLUCION_REESTRUCTURACION AS C
ON B.parent_account_name = C.parent_account_name
AND A.year_month = C.year_month

WHERE CAST(A.year_month AS DATE) BETWEEN MES_DESDE AND MES_HASTA
)


, LIVE_LISTING AS

-- 2022-01-01: 3586 FILAS
(
SELECT 
  B.parent_account_id
, B.parent_account_name
, CAST(A.CUSTOMER_SELLER_ID AS STRING) AS cus_cust_id
, A.year_month
, SUM(LIVE_LISTINGS) AS live_listings
, SUM(CONTACTOS_TOTALES_UNIQUE) AS contactos_totales_unique
, SUM(VISITAS_TOTAL) AS visitas_totales
, SAFE_DIVIDE(SUM(CONTACTOS_TOTALES_UNIQUE) , SUM(LIVE_LISTINGS)) AS vibrancy
, SAFE_DIVIDE(SUM(CONTACTOS_TOTALES_UNIQUE) , SUM(VISITAS_TOTAL)) AS contactos_sobre_visitas
-- METRICAS DE AYC USADOS SP
, SUM(IF( CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' ,LIVE_LISTINGS, NULL)) AS live_listings_foco_POM

, SUM(IF( CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' ,CONTACTOS_TOTALES_UNIQUE, NULL)) AS contactos_totales_unique_foco_POM

, SUM(IF( CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' ,VISITAS_TOTAL, NULL)) AS visitas_totales_foco_POM

, SAFE_DIVIDE(SUM(IF( CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' ,CONTACTOS_TOTALES_UNIQUE, NULL)) , SUM(IF( CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' ,LIVE_LISTINGS, NULL))) AS vibrancy_foco_POM


, SAFE_DIVIDE(SUM(IF( CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' ,CONTACTOS_TOTALES_UNIQUE, NULL)) , SUM(IF( CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' ,VISITAS_TOTAL, NULL))) AS contactos_sobre_visitas_foco_POM

-- METRICAS B2C: DE AYC USADOS SP VEHICLE_YEAR >= 2010 PRICE <= 150.000
, SUM(IF( (CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' AND VEHICLE_YEAR >= 2010 AND ITEM_LOCAL_PRICE <= 150000) ,LIVE_LISTINGS, NULL)) AS live_listings_foco_B2C_POM

, SUM(IF( (CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' AND VEHICLE_YEAR >= 2010 AND ITEM_LOCAL_PRICE <= 150000) ,CONTACTOS_TOTALES_UNIQUE, NULL)) AS contactos_totales_unique_foco_B2C_POM

, SUM(IF( (CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' AND VEHICLE_YEAR >= 2010 AND ITEM_LOCAL_PRICE <= 150000) ,VISITAS_TOTAL, NULL)) AS visitas_totales_foco_B2C_POM

, SAFE_DIVIDE(SUM(IF( (CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' AND VEHICLE_YEAR >= 2010 AND ITEM_LOCAL_PRICE <= 150000) ,CONTACTOS_TOTALES_UNIQUE, NULL)) , SUM(IF( (CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' AND VEHICLE_YEAR >= 2010 AND ITEM_LOCAL_PRICE <= 150000) ,LIVE_LISTINGS, NULL))) AS vibrancy_foco_B2C_POM


, SAFE_DIVIDE(SUM(IF( (CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' AND VEHICLE_YEAR >= 2010 AND ITEM_LOCAL_PRICE <= 150000) ,CONTACTOS_TOTALES_UNIQUE, NULL)) , SUM(IF( (CATEGORY_NAME_L2='Carros e Caminhonetes' AND ITEM_STATE IN ('BR-SP','S?o Paulo','SP','São Paulo','São') AND ITEM_CONDITION='Usado' AND VEHICLE_YEAR >= 2010 AND ITEM_LOCAL_PRICE <= 150000) ,VISITAS_TOTAL, NULL))) AS contactos_sobre_visitas_foco_B2C_POM

FROM `meli-bi-data.SBOX_MKTVIS.DASH_MOTORS_VIBRANCY` AS A

LEFT JOIN `meli-bi-data.SBOX_DESARROLLOMKTVIS.LK_IMM_MLB_PARENT_ACCOUNT_gsheet` AS B
ON B.cus_cust_id IS NOT NULL
AND CAST(A.CUSTOMER_SELLER_ID AS STRING) = CAST(B.cus_cust_id AS STRING)


WHERE SITE_ID = 'MLB'
AND A.year_month BETWEEN MES_DESDE AND MES_HASTA

GROUP BY 1,2,3,4
)

, TABLON_MES_CUST AS
-- unifico las 4 tablas principales por distinct year_month y cus_cust_id en un tablon para posteriormente usarlo como tabla principal
(
SELECT DISTINCT year_month, cus_cust_id FROM LIVE_LISTING -- informacion de live listing
UNION DISTINCT
SELECT DISTINCT year_month, cus_cust_id FROM EVOLUCION_CARGOS -- cargos de cus_id
UNION DISTINCT
SELECT DISTINCT year_month, cus_cust_id FROM EVOLUCION_ACTIVE_CUSTOMER -- altas bajas etc

)

, UNIFICACION AS
(
SELECT 
  C.parent_account_id
, C.parent_account_name
, A.cus_cust_id
, F.Segmento_POM_FINAL
, A.year_month

-- METRICAS por cus_cust_id
, E.live_listings
, E.contactos_totales_unique
, E.visitas_totales
, E.vibrancy
, E.contactos_sobre_visitas
-- METRICAS por cus_cust_id foco POM
, E.live_listings_foco_POM
, E.contactos_totales_unique_foco_POM
, E.visitas_totales_foco_POM
, E.vibrancy_foco_POM
, E.contactos_sobre_visitas_foco_POM
-- METRICAS por cus_cust_id foco B2C POM
, E.live_listings_foco_B2C_POM
, E.contactos_totales_unique_foco_B2C_POM
, E.visitas_totales_foco_B2C_POM
, E.vibrancy_foco_B2C_POM
, E.contactos_sobre_visitas_foco_B2C_POM

, D.altas_netas

, IF(C.parent_account_id IS NULL,1, SAFE_DIVIDE( SUM(live_listings) OVER (PARTITION BY A.year_month,A.cus_cust_id) , SUM(live_listings) OVER (PARTITION BY A.year_month,C.parent_account_id) ) ) AS denom_perc_live_listing_arpu_parent_id

, C.cust_id_revenue_especial
, C.cust_id_revenue_publicacion
, C.cust_id_revenue_showroom
, C.cust_id_arpu_total
, C.cust_id_arpu_performance

-- NUEVO
, C.parent_id_revenue_destaque
, C.parent_id_revenue_especial
, C.parent_id_revenue_publicacion
, C.parent_id_revenue_showroom
, C.parent_id_arpu_total
, C.parent_id_arpu_performance


FROM TABLON_MES_CUST AS A

FULL JOIN EVOLUCION_CARGOS AS C
ON A.cus_cust_id = C.cus_cust_id
AND A.year_month = C.year_month

-- joineo para traer su status en cada year_month
FULL JOIN EVOLUCION_ACTIVE_CUSTOMER AS D
ON A.cus_cust_id = D.cus_cust_id
AND A.year_month = D.year_month

FULL JOIN LIVE_LISTING AS E
ON A.cus_cust_id = E.cus_cust_id
AND A.year_month = E.year_month

-- base donde está la lista de cus_cust_id: https://docs.google.com/spreadsheets/d/1pKxohKdYHOMmCD4X9n-TB3-cH2uJ8HPMHTjaEb1S4-E/edit#gid=0 del segmento POM
LEFT JOIN `meli-bi-data.SBOX_MKTVIS.segmentos_POM` AS F
ON A.cus_cust_id = CAST(F.CUS_CUST_ID_SEL AS STRING)
)


SELECT
  A.* EXCEPT(parent_id_revenue_destaque, parent_id_revenue_especial, parent_id_revenue_publicacion, parent_id_revenue_showroom, cust_id_revenue_especial, cust_id_revenue_publicacion, cust_id_revenue_showroom)

, SAFE_MULTIPLY(parent_id_arpu_total     , denom_perc_live_listing_arpu_parent_id) AS parent_id_arpu_ponderado
, SAFE_MULTIPLY(parent_id_arpu_performance   , denom_perc_live_listing_arpu_parent_id) AS parent_id_arpu_performance_ponderado


FROM UNIFICACION AS A
